Expansion
Why clear_history function in subject?
Look at the readline functions
Check for commands before executing them : echo hello | notexist -d l  --> notexist command not found
Fix command > file1 > file 2. (need to create file1, but write result in the last one)
Fix extra newline in prompt. (you add it for fix ctrl^c i think)
Anton: my bash do nothing in the case when cd with no args, owr print a promp
Anton: unset dont working for me :( . if "unset $PATH" do nothing, if "unset PATH" and then try to execut any command, we got segfault(maybe wrong node deleting)
Anton: test in built-ins ft_strcmp possible error. In unset.c for example. You are cheking arg len caracters, possible error is "unset test" will work for $test123 if $test not existing
input/output file without permissons
Check for NULL return in prepare commands ?


Anton
============
Handle input (done)
Parsing Errors (in progress)
Here-doc mode (normally done)
Test behaviour when no env (normally done)
Fixed and tested many return values for errors, can be checked by echo $?
Fixed cases like "ls >|" "ls |||>" ">" "<" etc.
Fixed some input bugs
Added t_strlist->int ret variable to easily update the last returned value
Added some preprocessor define for economise lines
Fixed many of valgrind errors and no memory leaks were detected


Tom
===========
Signal handling : Prompt still not doing ok

Implemet ft_strndup and remove strndup

check for redir symbol at beginning of the output (may not work)

Implement all built ins :
	echo : done
	pwd : done
	cd :
	export : check if valid  input after = ?
	unset : done
	exit : What about history ?
	env : done
(Do we need to copy env and carry our own copy around ?)

Replace printf with dprintf -> STDERR

Pipeline returns last pid : should work

If necessary maybe make a t_cmd_list struct {
	t_command *head;
	t_command *curr_cmd;
	int		remaining;
} 

If there's just one command, no forking because built-ins do not have lasting effect whem piped but do on their own (done)

